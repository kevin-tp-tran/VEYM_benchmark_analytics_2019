# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C2.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C2.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C2.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
test_name <- readline(prompt = "Class name and division for test: ")
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C3.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C3.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C3.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C1.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C1.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C1.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C2.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C2.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C2.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C3.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C3.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\NS\\NS.C3.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C1.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C1.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C1.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
# Requires three text files: answers, answers of students per question, and
# scores of students per question for the whole nation. The data files for the
# student's answers and question 1 must start in column 4.
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C2.letters.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C2.numbers.txt
# C:\\Users\\kevint24\\Documents\\Project\\VEYM_benchmark_analytics_2019\\Data\\TN\\TN.C2.answers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.letters.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.numbers.txt
# E:\\Coding\\VEYM_benchmark_analytics_2019\\Data\\HS\\HS.C2.answers.txt
#
letters_entry <- readline(prompt = "Letter responses input path for test: ")
numbers_entry <- readline(prompt = "Question scores input path for test: ")
answers_entry <- readline(prompt = "Answers input path for test: ")
test_name <- readline(prompt = "Class name and division for test: ")
# Section  entries -------------------------------------------------------------
# Prompts the user to input the amount of sections, the section overview, and
# the amount of questions per section. The user must input this data
# chronologically.
#
section_names <- c()
section_count <- c()
sections <- as.numeric(readline("Number of sections in this test: "))
for (indiv_sect in 1:sections) {
category_name <- readline("Section name: ")
category_count <- readline("Questions pertaining to this category: ")
section_names <- append(category_name, section_names)
section_count <- append(as.numeric(category_count), section_count)
}
section_names <- rev(section_names)
section_count <- rev(section_count)
dat_natl <- read.table(letters_entry, header = T, fill = TRUE)
dat_numbers_natl <- read.table(numbers_entry, header = T, fill = TRUE)
answers <- read.table(answers_entry, header = T, fill = TRUE)
students <- nrow(dat_natl)
questions <- ncol(answers)
test_analysis(dat_natl, dat_numbers_natl, "pt")
# Chapter Analysis -------------------------------------------------------------
# Splits up the national test into the different chapter entries and analyzes
# those students to make a txt and pdf file document for chapters.
# Prereq: Table with
dat_numbers2 <- dat_numbers_natl
dat_numbers2[, 1] <- round(dat_numbers_natl[, 1] / 10000000)
chapters <- unique(dat_numbers2[, 1])
indices <- numeric(length(chapters) + 1)
# Find first index of the given chapters
for (i in 1:length(chapters)) {
indices[i] <- which(dat_numbers2[, 1] == chapters[i])
}
indices[i + 1] <- students  # last index from the national (covers all chapters)
indices
for (i in 1:(length(indices) - 1)) {
if (i != length(indices) - 1) {
new_numbers <- dat_numbers2[indices[i]:(indices[i + 1] - 1) ,]
new_letters <- dat_natl[indices[i]:(indices[i + 1] - 1) ,]
} else {
new_numbers <- dat_numbers2[indices[i]:indices[i + 1] ,]
new_letters <- dat_natl[indices[i]:indices[i + 1] ,]
}
doan <- chapters[i]
test_analysis(new_letters, new_numbers, doan)
}
